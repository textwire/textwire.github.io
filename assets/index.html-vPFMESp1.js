import{_ as e,o as a,c as t,a as i}from"./app-V1akedGy.js";const r={},n=i(`<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><p>Welcome to Textwire, a powerful template interpreter designed for Go developers. Textwire provides a seamless way to inject variables into your HTML files, making it easier to create dynamic and data-driven content. This guide will walk you through the essential steps to get started with Textwire in your Go projects.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>Install the Textwire package in your Go environment. You can do this by running the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go get <span class="token parameter variable">-u</span> github.com/textwire/textwire
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="interpret-a-string" tabindex="-1"><a class="header-anchor" href="#interpret-a-string" aria-hidden="true">#</a> Interpret a string</h2><p>todo: here</p><h2 id="interpret-a-file" tabindex="-1"><a class="header-anchor" href="#interpret-a-file" aria-hidden="true">#</a> Interpret a file</h2><p>todo: here</p><h2 id="textwire-as-a-template-engine" tabindex="-1"><a class="header-anchor" href="#textwire-as-a-template-engine" aria-hidden="true">#</a> Textwire as a template engine</h2><p>If you want to know how to use Textwire as a template engine, you can read the <a href="/1.x/usage-with-templates">Usage with Templates</a> page.</p>`,11),s=[n];function o(d,h){return a(),t("div",null,s)}const c=e(r,[["render",o],["__file","index.html.vue"]]);export{c as default};
