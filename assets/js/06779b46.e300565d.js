"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8016],{5996:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"guides/configurations","title":"Configurations - v2","description":"Learn how to setup and configure Textwire in your Go applications","source":"@site/versioned_docs/version-v2/guides/configurations.md","sourceDirName":"guides","slug":"/guides/configurations","permalink":"/docs/v2/guides/configurations","draft":false,"unlisted":false,"tags":[],"version":"v2","sidebarPosition":7,"frontMatter":{"title":"Configurations - v2","sidebar_label":"Configurations","sidebar_position":7,"description":"Learn how to setup and configure Textwire in your Go applications"},"sidebar":"tutorialSidebar","previous":{"title":"Error Handling","permalink":"/docs/v2/guides/error-handling"},"next":{"title":"Loops Usage","permalink":"/docs/v2/guides/loops"}}');var o=i(4848),r=i(8453);const s={title:"Configurations - v2",sidebar_label:"Configurations",sidebar_position:7,description:"Learn how to setup and configure Textwire in your Go applications"},d="Configurations",l={},a=[{value:"Setting Configurations",id:"setting-configurations",level:2},{value:"Available Configurations",id:"available-configurations",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"configurations",children:"Configurations"})}),"\n",(0,o.jsx)(t.p,{children:"Textwire offers several configuration options to customize its behavior. You can apply these settings in two ways:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsxs)(t.strong,{children:["Using ",(0,o.jsx)(t.code,{children:"textwire.Configure"}),":"]}),"\nCall the ",(0,o.jsx)(t.code,{children:"textwire.Configure"})," function to set global configurations for the library."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsxs)(t.strong,{children:["Passing to ",(0,o.jsx)(t.code,{children:"textwire.NewTemplate"}),":"]}),"\nPass the configuration directly to the ",(0,o.jsx)(t.code,{children:"textwire.NewTemplate"})," function when creating templates, allowing you to customize behavior on a per-template basis."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"setting-configurations",children:"Setting Configurations"}),"\n",(0,o.jsxs)(t.p,{children:["To learn how to set configurations using ",(0,o.jsx)(t.code,{children:"textwire.NewTemplate"}),", refer to the ",(0,o.jsx)(t.a,{href:"/docs/v2/guides/template-usage",children:"Usage with Templates"})," guide. Below is a basic example of setting configurations with ",(0,o.jsx)(t.code,{children:"textwire.Configure"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-go",children:'import (\n    "github.com/textwire/textwire/v2"\n    "github.com/textwire/textwire/v2/config"\n)\n\nfunc main() {\n    textwire.Configure(&config.Config{\n        TemplateDir: "templates",\n        TemplateExt: ".tw", // recommended to use .tw extension\n    })\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["In the example above the ",(0,o.jsx)(t.code,{children:"TemplateDir"})," and ",(0,o.jsx)(t.code,{children:"TemplateExt"})," make sense only if you use Textwire as a template engine for your project. For things like evaluating a single Textwire file or a string, you don't need to set these configurations."]}),"\n",(0,o.jsx)(t.p,{children:"All the configurations in Textwire are optional, because each configuration has a default value. Read more about the available configurations below."}),"\n",(0,o.jsx)(t.h2,{id:"available-configurations",children:"Available Configurations"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Property"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Description of the configuration"}),(0,o.jsx)(t.th,{children:"Default value"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"TemplateDir"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"string"})}),(0,o.jsx)(t.td,{children:"The directory where Textwire will look for template files"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:'"templates"'})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"TemplateExt"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"string"})}),(0,o.jsx)(t.td,{children:"The extension of the template files"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:'".tw.html"'})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"ErrorPagePath"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"string"})}),(0,o.jsxs)(t.td,{children:["The relative path to the custom error page. It's relative to the ",(0,o.jsx)(t.code,{children:"TemplateDir"})," directory. Custom error page is displayed only when ",(0,o.jsx)(t.code,{children:"DebugMode"})," is set to ",(0,o.jsx)(t.code,{children:"false"})]}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:'""'})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"DebugMode"})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"bool"})}),(0,o.jsxs)(t.td,{children:["Is a flag to enable the debug mode. With this mode enabled you can see error messages in the browser. Read about the error handling ",(0,o.jsx)(t.a,{href:"/docs/v2/guides/error-handling",children:"here"})]}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"false"})})]})]})]}),"\n",(0,o.jsx)(t.admonition,{title:"Recommended",type:"info",children:(0,o.jsxs)(t.p,{children:["We recommend using the ",(0,o.jsx)(t.code,{children:"TemplateExt"})," setting with the ",(0,o.jsx)(t.code,{children:".tw"})," extension. The ",(0,o.jsx)(t.code,{children:".tw.html"})," extension is longer and may be deprecated in future major versions of Textwire."]})}),"\n",(0,o.jsx)(t.admonition,{title:"Losing Extension Features",type:"warning",children:(0,o.jsxs)(t.p,{children:["If you are using VSCode and change the ",(0,o.jsx)(t.code,{children:"TemplateExt"})," setting to anything other than ",(0,o.jsx)(t.code,{children:".tw"})," or ",(0,o.jsx)(t.code,{children:".tw.html"}),", you will lose syntax highlighting for Textwire files provided by the ",(0,o.jsx)(t.a,{href:"https://marketplace.visualstudio.com/items?itemName=SerhiiCho.textwire",children:"Textwire extension"}),". To retain full extension functionality, change the extension to ",(0,o.jsx)(t.code,{children:".tw"})," for Textwire files."]})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>d});var n=i(6540);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);