"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6057],{5672:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var s=t(2151),i=t(4848),r=t(8453);const a={title:"v2.4.0 Release Notes",description:"Get to know details about the Textwire version 2.4.0 release by reading the complete release notes",authors:["serhiicho"],tags:["release"]},o=void 0,c={authorsImageUrls:[void 0]},d=[{value:"Component Path Alias",id:"component-path-alias",level:2},{value:"New <code>trimRight</code> and <code>trimLeft</code> Functions",id:"new-trimright-and-trimleft-functions",level:2},{value:"New <code>repeat</code> Function",id:"new-repeat-function",level:2},{value:"New <code>append</code> and <code>prepend</code> Functions",id:"new-append-and-prepend-functions",level:2},{value:"New <code>@dump</code> Directive",id:"new-dump-directive",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The Textwire version ",(0,i.jsx)(n.code,{children:"v2.4.0"})," is an important release. The first release in 2025. It adds several convenient features and improvements to the language. This release includes Component Path Alias, introduction of new built-in functions, debugging utilities and more. Read the complete release notes to learn more about the changes."]}),"\n",(0,i.jsx)(n.h2,{id:"component-path-alias",children:"Component Path Alias"}),"\n",(0,i.jsxs)(n.p,{children:["Component Path Alias is a small but useful feature that is useful for people who will keep their components in the ",(0,i.jsx)(n.code,{children:"components"})," directory. The ",(0,i.jsx)(n.code,{children:"~"})," alias can be used to reference components in the ",(0,i.jsx)(n.code,{children:"components"})," directory."]}),"\n",(0,i.jsxs)(n.p,{children:["Consider this example of calling a ",(0,i.jsx)(n.code,{children:"components/post-card"})," component before the version ",(0,i.jsx)(n.code,{children:"v2.4.0"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",children:'<div class="posts">\n    @each(post in posts)\n        @component("components/post-card", { post })\n    @end\n</div>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Now you can repleace the ",(0,i.jsx)(n.code,{children:"components/"})," part with ",(0,i.jsx)(n.code,{children:"~"})," alias like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",children:'<div class="posts">\n    @each(post in posts)\n        @component("~post-card", { post })\n    @end\n</div>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"~"})," alias will be replaced with ",(0,i.jsx)(n.code,{children:"components/"})," behind the scenes."]}),"\n",(0,i.jsxs)(n.h2,{id:"new-trimright-and-trimleft-functions",children:["New ",(0,i.jsx)(n.code,{children:"trimRight"})," and ",(0,i.jsx)(n.code,{children:"trimLeft"})," Functions"]}),"\n",(0,i.jsxs)(n.p,{children:["A couple of people suggested to add ",(0,i.jsx)(n.a,{href:"/docs/v2/functions/str#trimright",children:(0,i.jsx)(n.code,{children:"trimRight"})})," and ",(0,i.jsx)(n.a,{href:"/docs/v2/functions/str#trimleft",children:(0,i.jsx)(n.code,{children:"trimLeft"})})," functions and now they are available in the ",(0,i.jsx)(n.code,{children:"v2.4.0"})," release. We already had the ",(0,i.jsx)(n.a,{href:"/docs/v2/functions/str#trim",children:(0,i.jsx)(n.code,{children:"trim"})})," function for trimming both sides of a string, but now you can trim only the left or right side of a string if that's what you need."]}),"\n",(0,i.jsx)(n.p,{children:"The usage is simple:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Example"',children:'<span>{{ " Textwire ".trim() }}</span>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Output"',children:"<span>Textwire</span>\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can also pass a string of characters to trim from a string:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Example"',children:"<span>{{ \"_Textwire\".trimLeft('_') }}</span>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Output"',children:"<span>Textwire</span>\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"new-repeat-function",children:["New ",(0,i.jsx)(n.code,{children:"repeat"})," Function"]}),"\n",(0,i.jsxs)(n.p,{children:["A new function ",(0,i.jsx)(n.a,{href:"/docs/v2/functions/str#repeat",children:(0,i.jsx)(n.code,{children:"repeat"})})," is added to strings. The function repeats a string a specified number of times. The function takes a single argument, the number of times to repeat the string."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Example"',children:"<span>{{ '\ud83e\udd23'.repeat(5) }}</span>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Output"',children:"<span>\ud83e\udd23\ud83e\udd23\ud83e\udd23\ud83e\udd23\ud83e\udd23</span>\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"new-append-and-prepend-functions",children:["New ",(0,i.jsx)(n.code,{children:"append"})," and ",(0,i.jsx)(n.code,{children:"prepend"})," Functions"]}),"\n",(0,i.jsxs)(n.p,{children:["Two new functions ",(0,i.jsx)(n.a,{href:"/docs/v2/functions/arr#append",children:(0,i.jsx)(n.code,{children:"append"})})," and ",(0,i.jsx)(n.a,{href:"/docs/v2/functions/arr#prepend",children:(0,i.jsx)(n.code,{children:"prepend"})})," are added to arrays. The ",(0,i.jsx)(n.code,{children:"append"})," function adds one or more elements to the end of an array and returns a new array. The ",(0,i.jsx)(n.code,{children:"prepend"})," function adds one or more elements to the beginning of an array and returns a new array."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Example"',children:'<span>{{ ["one", "two"].append("three", "four") }}</span>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Output"',children:"<span>one, two, three, four</span>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Example"',children:'<span>{{ ["one", "two"].prepend("three", "four") }}</span>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Output"',children:"<span>three, four, one, two</span>\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"new-dump-directive",children:["New ",(0,i.jsx)(n.code,{children:"@dump"})," Directive"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@dump"})," directive is used for debugging purposes. It will print the value of the passed variables, objects, arrays, etc. to the output. Here is an example of using the ",(0,i.jsx)(n.code,{children:"@dump"})," directive:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-textwire",metastring:'title="Example"',children:'<h1>This is my title</h1>\n\n@dump({\n    name: "John",\n    age: 25,\n    admin: false,\n    hobbies: ["reading", "coding"],\n})\n\n<p>Some content</p>\n'})}),"\n",(0,i.jsx)(n.p,{children:"The output would look like something like this:"}),"\n",(0,i.jsx)("img",{src:"/img/dump-object.png",title:"Dump object in Textwire",width:"400"}),"\n",(0,i.jsx)(n.p,{children:"It's an easy and convenient way to debug your templates and see what's going on inside of them."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},2151:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/01/10/textwire-v2.4.0","source":"@site/blog/2025-01-10-textwire-v2.4.0/index.md","title":"v2.4.0 Release Notes","description":"Get to know details about the Textwire version 2.4.0 release by reading the complete release notes","date":"2025-01-10T00:00:00.000Z","tags":[{"inline":false,"label":"Version Release Notes","permalink":"/blog/tags/release","description":"The latest version release notes"}],"readingTime":2.35,"hasTruncateMarker":true,"authors":[{"name":"Serhii Cho","title":"Full Stack Engineer","url":"https://serhii.io","page":{"permalink":"/blog/authors/serhiicho"},"socials":{"x":"https://x.com/SerhiiCho","github":"https://github.com/SerhiiCho","linkedin":"https://www.linkedin.com/in/serhiicho/"},"imageURL":"https://github.com/SerhiiCho.png","key":"serhiicho"}],"frontMatter":{"title":"v2.4.0 Release Notes","description":"Get to know details about the Textwire version 2.4.0 release by reading the complete release notes","authors":["serhiicho"],"tags":["release"]},"unlisted":false,"nextItem":{"title":"v2.1.0 Release Notes","permalink":"/blog/2024/10/24/textwire-v2.1.0-release-notes"}}')}}]);